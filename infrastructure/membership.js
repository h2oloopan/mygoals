// Generated by CoffeeScript 1.7.1
(function() {
  var auth, config, connector, membership;

  auth = require('../helpers/auth');

  config = require('../config');

  connector = require('../repos/connector');

  membership = module.exports = {
    userRepo: connector.getRepos().getRepo('user'),
    middleware: function(req, res, next) {
      var uid;
      uid = req.signedCookies['U'];
      if (uid != null) {
        return membership.userRepo.getUserById(id, function(err, user) {
          if ((err == null) && (user != null)) {
            req.user = user;
          }
          return next();
        });
      } else {
        return next();
      }
    },
    authenticate: function(eu, password, cb) {
      password = auth.encrypt(password);
      if (eu.indexOf('@') >= 0) {
        return membership.repo.getUserByEmailPassword(eu, password, cb);
      } else {
        return membership.repo.getUserByUsernamePassword(eu, password, cb);
      }
    },
    login: function(user, res) {
      return res.cookie('U', user.id.toString(), {
        signed: true
      });
    },
    logout: function(res) {
      return res.clearCookie('U');
    },
    signup: function(user, cb) {
      var password;
      if (user.password != null) {
        password = user.password;
      } else {
        return cb(new Error('Password is empty'));
      }
      return membership.userRepo.addUser(user, cb);
    }
  };

}).call(this);
