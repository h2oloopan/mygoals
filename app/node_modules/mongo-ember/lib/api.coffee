mongoose = require 'mongoose'
utils = require 'mongoose/lib/utils'
me = require './mongo-ember'
h = require './helper'


prepareRequirements = (requirements) ->
	console.log requirements
	return requirements

crud = (app, url, name) ->
	model = mongoose.models[name]
	cname = utils.toCollectionName name

	pf = me.settings.powerField
	requirements = prepareRequirements me.requirements

	#c
	app.post url, (req, res) ->
		obj = h.unwrap req.body
		obj = new model obj
		obj.save (err, result) ->
			if err
				res.send 500, err.message
			else
				res.send 201, h.wrap result, name

	#r
	#r all
	app.get url, (req, res) ->
		model.find {}, (err, result) ->
			if err
				res.send 500, err.message
			else
				res.send 200, h.wrap result, cname
	
	#r one
	app.get url + '/:id', (req, res) ->
		id = req.params.id
		model.findById id, (err, result) ->
			if err
				res.send 500, err.message
			else
				res.send 200, h.wrap result, name

	#u
	app.put url + '/:id', (req, res) ->
		id = req.params.id
		obj = h.unwrap req.body
		model.findByIdAndUpdate id, obj, (err, result) ->
			if err
				res.send 500, err.message
			else
				res.send 200, h.wrap result, name

	#d
	app.delete url + '/:id', (req, res) ->
		id = req.params.id
		#why find and remove? to make sure cascading removal hooks are called
		model.findById id, (err, result) ->
			if err
				res.send 500, err.message
			else if !result?
				res.send 500, 'No matching item to delete'
			else
				result.remove (err, result) ->
					if err
						res.send 500, err.message
					else
						res.send 204




api = module.exports =
	bind: (app) ->
		root = '/' + (me.settings.namespace || '')	
		models = mongoose.models
		for name of models
			model = models[name]
			cname = utils.toCollectionName name
			url = root + '/' + cname
			crud app, url, name
			
		return