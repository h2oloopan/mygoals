// Generated by CoffeeScript 1.7.1
var createAdapter, createJs, createModel, createSerializer, js, me, toSend, toSkip, toUnderscore, typeMap;

me = require('./mongo-ember');

toSkip = ['__v'];

toUnderscore = ['model'];

typeMap = {
  'String': 'string',
  'ObjectID': 'string'
};

toSend = 'models = {}; ';

createModel = function(schema) {
  var count, definition, js, key, keys, _i, _len;
  js = '';
  keys = Object.keys(schema);
  count = 1;
  for (_i = 0, _len = keys.length; _i < _len; _i++) {
    key = keys[_i];
    definition = schema[key];
    if (toUnderscore.indexOf(key) >= 0) {
      js += '_';
    }
    js += key + ': DS.attr("' + typeMap[definition.instance] + '")';
    if (count < keys.length) {
      js += ', ';
    }
    count++;
  }
  return js;
};

createAdapter = function(schema) {
  return (me.settings.namespace ? 'namespace: "' + me.settings.namespace + '"' : '');
};

createSerializer = function(schema) {
  var js;
  js = '';
  if (me.settings.primaryKey !== 'id') {
    js += 'primaryKey: "' + me.settings.primaryKey + '"';
  }
  return js;
};

createJs = function(name, schema) {
  var js;
  console.log(name);
  console.log(schema);
  js = 'models["' + name + '"] = DS.Model.extend({' + createModel(schema) + '}); adapters["' + name + '"] = DS.RESTAdapter.extend({' + createAdapter(schema) + '}); serializers["' + name + '"] = DS.RESTSerializer.extend({' + createSerializer(schema) + '});';
  return js;
};

js = module.exports = {
  addModel: function(model) {
    var key, keys, name, paths, _i, _len;
    name = model.modelName;
    paths = model.schema.paths;
    keys = Object.keys(paths);
    for (_i = 0, _len = keys.length; _i < _len; _i++) {
      key = keys[_i];
      if (toSkip.indexOf(key) >= 0) {
        delete paths[key];
      }
    }
    js = createJs(name, paths);
    if (toSend != null) {
      toSend += js;
    } else {
      toSend = js;
    }
    return console.log(toSend);
  },
  middleware: function(req, res, next) {
    return next();
  }
};
