// Generated by CoffeeScript 1.7.1
var createModel, fs, getSchema, loadModels, middleware, modelExtension, mongo, mongoose, path;

path = require('path');

fs = require('fs');

mongoose = require('mongoose');

mongo = require('./mongo');

middleware = require('./middleware');

modelExtension = '.js';

exports.middleware = middleware.func;

getSchema = exports.getSchema = function(name) {
  return mongo.getSchema(name);
};

createModel = exports.createModel = function(name, schema) {
  var model;
  model = mongo.createModel(name, schema);
  return middleware.addModel(model);
};

loadModels = exports.loadModels = function(folder) {
  var load;
  load = function(dir) {
    var file, files, _i, _len, _results;
    files = fs.readdirSync(dir);
    _results = [];
    for (_i = 0, _len = files.length; _i < _len; _i++) {
      file = files[_i];
      _results.push((function(file) {
        var name, obj, schema;
        file = path.join(dir, file);
        if (!fs.statSync(file).isDirectory()) {
          if (path.extname(file) === modelExtension) {
            obj = require(file);
            name = Object.keys(obj)[0];
            schema = obj[name];
            return createModel(name, schema);
          }
        } else {
          return load(file);
        }
      })(file));
    }
    return _results;
  };
  return load(folder);
};

exports.setup = function(options) {
  var modelsFolder;
  modelExtension = options.modelExtension || '.js';
  modelsFolder = options.modelsFolder || null;
  if (modelsFolder) {
    return loadModels(modelsFolder);
  }
};

exports.connect = function(connectionString) {
  var con;
  con = mongoose.connection;
  mongoose.connect(connectionString, {
    server: {
      socketOptions: {
        keepAlive: 1
      }
    }
  });
  mongoose.connection.on('connected', function() {
    return console.log('MongoDB connected');
  });
  mongoose.connection.on('disconnected', function() {
    return console.log('MongoDB disconnected');
  });
  mongoose.connection.on('error', function(err) {
    return console.log('MongoDB returned with error ' + err);
  });
  return con;
};
