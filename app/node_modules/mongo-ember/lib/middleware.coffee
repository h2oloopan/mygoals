me = require './mongo-ember'

jses = {}
toSkip = [
	'__v'
]

startJs = () ->
	js = '
			models = {};
		 '


endJs = () ->
	js = '
			attach = function(App, name) {
				App[name] = models[name];
				App[name + "Adapter"] = adapters[name];
				App[name + "Serializer"] = serializers[name];
			};
		 '

createJs = (name, schema) ->
	js = '
			models["' + name + '"] = DS.Model.extend({

			});

			adapters["' + name + '"] = DS.RESTAdapter.extend({
				' + (if me.settings.namespace then me.settings.namespace else '') + '
			});

			serializers["' + name + '"] = DS.RESTSerializer.extend({

			});
		 '
	return js

#this middleware is used to route js apis
module.exports = 
	addModel: (model) ->
		name = model.modelName
		paths = model.schema.paths
		keys = Object.keys paths
		for key in keys
			if toSkip.indexOf(key) >= 0
				continue
			#actually deal with it here
			start = startJs()
			middle = createJs(name, paths[key])
			end = endJs()
			jses[name.toLowerCase()] = start + middle + end 


	func: (req, res, next) ->
		next()